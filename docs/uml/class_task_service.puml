@startuml

package app {

  package main {
    class MainApp {
      +FastAPI instance
      +include_router()
    }
  }

  package routers {
    class task_router <<module>>
  }

  package services {
    class TaskService {
      +create_task()
    }
  }

  package schemas {
    class TaskCreate {
      +title: str
      +description: str
      +done: bool
    }

    class Task {
      +id: UUID
      +title: str
      +description: str
      +done: bool
    }

    class TaskResponse {
      +message: str
      +task: Task
    }
  }

  package db {
    package models {
      class TaskModel {
        +id: UUID
        +title: str
        +description: str
        +done: bool
      }
    }

    package session {
      class AsyncSessionManager {
        +get_db()
      }
    }
  }
}

note right of task_router
  POST /tasks/
  prefix="/tasks"
  response_model=TaskResponse
end note

' 依存関係はクラス名・モジュール名で指定（パッケージ名は書かない）
MainApp --> task_router : include_router()
task_router --> TaskService : uses
task_router --> TaskCreate : uses input schema
task_router --> TaskResponse : uses output schema
TaskService --> AsyncSessionManager : uses for DB session
TaskService --> TaskModel : ORM操作
TaskService --> TaskCreate : 入力DTO
TaskService --> Task : 出力DTO
TaskService --> TaskResponse : return
TaskCreate --> Task : creates entity
TaskResponse --> Task : has-a
Task --> TaskModel : from_orm()

@enduml
